local Tool = script.Parent.Parent

local Anim = script:WaitForChild("Animation")
local AnimTrack

local hitChars = {}
local debounce = false

Tool.Activated:Connect(function()
	if debounce then
	return
	end
debounce = true

local humanoid = Tool.Parent.Humanoid
if not AnimTrack then
	AnimTrack = humanoid:LoadAnimation(Anim)
end
AnimTrack:Play()
wait(2.5)
debounce = false
end)

Tool.Hitbox.Touched:Connect(function(hit)
	if hitChars[hit.Parent] or not debounce then
		return
	end
	
	if hit.Parent:FindFirstChild("Humanoid") then
		local eChar = hit.Parent
		local plrChar = Tool.Parent
		
		local eHumanoidRootPart = eChar.FindFirstChild("HumanoidRootPart")
		local plrHumanoidRootPart = plrChar:FindFirstChild("HmanoidRootPart")
		
		if plrHumanoidRootPart and eHumanoidRootPart then
			script.Disabled = true
			eChar.Humanoid.Sit = true
			
			local force = Instance.new("BodyVelocity",eHumanoidRootPart)
			force.MaxForce = Vector3.new(2,2,2)*math.huge
			local direction = (eHumanoidRootPart.CFrame.Position - plrHumanoidRootPart.CFrame.Position).Unit
			force.Velocity = (direction + Vector3.new(0,1,0)).Unit*60
			
			local rotation = Instance.new("BodyAngularVelocity",eHumanoidRootPart)
			rotation.AngularVelocity = Vector3.new(1,1,1)*math.pi*math.random(1,5)
			rotation.MaxTorque = Vector3.new(2,2,2)*math.huge
			rotation.P = 5000
			
			wait(0.35)
			force:Destroy()
			rotation:Destroy()
			eChar.Humanoid.Sit = false
			
			local player = game.Players:GetPlayerFromCharacter(Tool.Parent)
			player.leaderstats.Slaps.Value = player.leaderstats.Slaps.Value + 1
		end
		hitChars[hit.Parent] = true
		wait(2.5)
		script.Disabled = false
		hitChars[hit.Parent] = nil
	end
end)
